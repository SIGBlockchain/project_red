plugins {
    id "application"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.beryx.jlink" version "2.17.0"
}


dependencies {

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile "org.testfx:testfx-junit5:4.0.16-alpha"

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'

}

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
}

//mainClassName = "$moduleName/sigblockchain.projectred.gui.Entry"

compileTestJava {
    moduleOptions {
        addModules = ['org.testfx']
    }

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }


    moduleOptions {
        addExports = [
                'javafx.graphics/com.sun.javafx.application': 'org.testfx',
                'javafx.graphics/com.sun.glass.ui'          : 'org.testfx'
        ]
        addReads = [
                'sigblockchain.projectred.gui': 'org.testfx'
        ]
        if ((org.gradle.internal.os.OperatingSystem.current().windows)) {
            addOpens = [
                    'javafx.graphics/com.sun.glass.ui.win': 'org.testfx'
            ]
        }else if (org.gradle.internal.os.OperatingSystem.current().linux) { //assuming gtk is being used
            addOpens = [
                    'javafx.graphics/com.sun.glass.ui.gtk': 'org.testfx'
            ]
        }
    }
}


application {
    mainClassName = "$moduleName/sigblockchain.projectred.gui.Entry"
}


task fatJar(type: Jar) {

    manifest {
        attributes 'Main-Class': "sigblockchain.projectred.gui.Entry"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


jlink {
    imageZip = file("$buildDir/image-zip/hellofx.zip")
    options = ['--bind-services', '--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        name = "Project Red"
    }

    jpackage {
        if ((org.gradle.internal.os.OperatingSystem.current().windows)) {
            installerType = "exe"
            jpackageHome = "C:\\Program Files\\Java\\jdk-14"
            installerOptions = ['--win-per-user-install', '--win-menu', '--win-shortcut', '--win-dir-chooser']
        } else if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = "deb"
            jpackageHome = "/usr/lib/jvm/java-14-openjdk-amd64"
            installerOptions = ['--linux-shortcut']
        }
    }
}
